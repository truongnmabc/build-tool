name: CI/CD

on:
    pull_request:
        branches: ["main"]

jobs:
    build_and_deploy:
        runs-on: ubuntu-latest
        environment: dev
        permissions:
            contents: read
            issues: write
        strategy:
            matrix:
                node-version: [22.x]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Create .env file
              run: |
                  touch .env
                  echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env
                  echo "AUTH_GITHUB_ID=${{ secrets.AUTH_GITHUB_ID }}" >> .env
                  echo "AUTH_GITHUB_SECRET=${{ secrets.AUTH_GITHUB_SECRET }}" >> .env
                  echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
                  echo "GTIHUB_OWNER=${{ secrets.GH_OWNER }}" >> .env
                  echo "GITHUB_REPO=${{ secrets.GH_REPO }}" >> .env
                  echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> .env
                  cat .env

            - name: Set Docker Image Name
              run: |
                  echo "IMAGE_URL=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}" >> $GITHUB_ENV
                  echo "IMAGE_URL_LATEST=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest" >> $GITHUB_ENV

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry (GHCR)
              if: success()
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GH_TOKEN }}

            - name: Build and push Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: ${{ env.IMAGE_URL }},${{ env.IMAGE_URL_LATEST }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      ENV_FILE=.env

            - name: Deploy Image to CapRover
              uses: caprover/deploy-from-github@v1.1.2
              with:
                  server: "${{ secrets.CAPROVER_SERVER }}"
                  app: "${{ secrets.CAPROVER_APP_NAME }}"
                  token: "${{ secrets.CAPROVER_API_TOKEN }}"
                  image: ${{ env.IMAGE_URL }}
